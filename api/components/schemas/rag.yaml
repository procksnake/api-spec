RagQueryRequest:
  type: object
  required:
    - query
    - sessionId
  properties:
    query:
      type: string
      minLength: 2
      maxLength: 2000
      description: User query
      example: 'What is list comprehension in Python?'
    sessionId:
      type: integer
      format: uint64
      description: Session identifier
    searchOptions:
      type: object
      description: Search/retrieval settings
      properties:
        vectorThreshold:
          type: number
          minimum: 0.0
          maximum: 1.0
          default: 0.65
          description: Similar query threshold
        vectorWeight:
          type: number
          minimum: 0
          maximum: 1
          default: 0.8
          description: |
            Weight for vector/semantic search vs keyword search
            0.0 = pure semantic search
            1.0 = pure keyword search  
            0.5 = balanced hybrid
        topK:
          type: integer
          minimum: 1
          maximum: 10
          default: 3
          description: Maximum number of results to return
    generationOptions:
      type: object
      description: Response generation settings
      properties:
        temperature:
          type: number
          minimum: 0.0
          maximum: 2.0
          default: 1.0
          description: Response creativity/randomness
        maxTokens:
          type: integer
          minimum: 64
          maximum: 8192
          default: 2048
          description: Maximum response length
        includeReferences:
          type: boolean
          default: true
          description: Include source references in response
        systemPrompt:
          type: string
          default: 'You are a helpful assistant. Answer based on the provided context.'
          description: System prompt to guide response style and behavior

RagQueryResponse:
  allOf:
    - $ref: '../schemas/common.yaml#/APIResponse'
    - type: object
      properties:
        data:
          $ref: '#/RagQueryData'

RagQueryData:
  type: object
  required:
    - queryId
    - sessionId
    - response
  properties:
    queryId:
      type: string
      description: Unique query identifier
      example: 'query_abc123'
    sessionId:
      type: integer
      format: uint64
      description: Session identifier
    response:
      type: string
      description: LLM generated response
      example: 'List comprehension is a concise way to create lists in Python...'
    sources:
      type: array
      description: Referenced documents
      items:
        $ref: '#/RagQuerySource'
    similarQueries:
      type: array
      description: Similar previous queries
      items:
        $ref: '#/RagSimilarQuery'
    metadata:
      $ref: '#/RagResponseMetadata'

RagQuerySource:
  type: object
  required:
    - sourceId
    - relevanceScore
  properties:
    sourceId:
      type: string
      description: Document identifier
    title:
      type: string
      description: Document title
    relevanceScore:
      type: number
      minimum: 0.0
      maximum: 1.0
      description: Relevance score
    excerpt:
      type: string
      description: Relevant document excerpt
    url:
      type: string
      format: uri
      description: Original document URL

RagSimilarQuery:
  type: object
  required:
    - query
    - similarityScore
  properties:
    query:
      type: string
      description: Similar previous query
    similarityScore:
      type: number
      minimum: 0.0
      maximum: 1.0
      description: Similarity score
    queryId:
      type: string
      description: Previous query ID
    timestamp:
      type: string
      format: date-time
      description: Query timestamp

RagResponseMetadata:
  type: object
  description: Response processing metadata
  properties:
    processingTimeMs:
      type: integer
      description: Total processing time (milliseconds)
    vectorSearchTimeMs:
      type: integer
      description: Vector search time (milliseconds)
    llmResponseTimeMs:
      type: integer
      description: LLM response generation time (milliseconds)
    similarityCheckTimeMs:
      type: integer
      description: Similarity check time (milliseconds)
    sourcesCount:
      type: integer
      description: Number of referenced documents
    similarQueriesCount:
      type: integer
      description: Number of similar queries found

RagQueryHistory:
  type: object
  required:
    - queryId
    - query
    - timestamp
  properties:
    queryId:
      type: string
      description: Query identifier
    query:
      type: string
      description: Original query
    response:
      type: string
      description: Generated response
    timestamp:
      type: string
      format: date-time
      description: Query timestamp
    processingTimeMs:
      type: integer
      description: Processing time (milliseconds)

RagSessionCreateRequest:
  type: object
  required:
    - name
  properties:
    name:
      type: string
      minLength: 1
      maxLength: 100
      description: Session name
      example: 'Python Learning Session'
    description:
      type: string
      maxLength: 500
      description: Session description
      example: 'Session for learning Python programming concepts'
    tags:
      type: array
      items:
        type: string
      description: Session tags
      example: ['python', 'programming', 'learning']

RagSessionCreateResponse:
  allOf:
    - $ref: '../schemas/common.yaml#/APIResponse'
    - type: object
      properties:
        data:
          $ref: '#/RagSession'

RagSessionListResponse:
  allOf:
    - $ref: '../schemas/common.yaml#/APIResponse'
    - type: object
      properties:
        data:
          $ref: '#/RagSessionListData'

RagSessionGetResponse:
  allOf:
    - $ref: '../schemas/common.yaml#/APIResponse'
    - type: object
      properties:
        data:
          $ref: '#/RagSessionData'

RagSessionBase:
  type: object
  required:
    - id
    - createdAt
  properties:
    id:
      type: integer
      format: uint64
      description: Session identifier
    name:
      type: string
      description: Session name
      example: 'Python Learning Session'
    description:
      type: string
      description: Session description
      example: 'Session for learning Python programming concepts'
    createdAt:
      type: string
      format: date-time
      description: Session creation timestamp
      example: '2025-05-24T10:30:00Z'
    updatedAt:
      type: string
      format: date-time
      description: Last update timestamp
      example: '2025-05-24T14:45:30Z'
    tags:
      type: array
      items:
        type: string
      description: Session tags
      example: ['python', 'programming', 'learning']

RagSession:
  allOf:
    - $ref: '#/RagSessionBase'

RagSessionSummary:
  allOf:
    - $ref: '#/RagSessionBase'
    - type: object
      required:
        - totalQueries
      properties:
        totalQueries:
          type: integer
          description: Total number of queries in session
          example: 15
        lastQueryAt:
          type: string
          format: date-time
          description: Timestamp of last query
          example: '2025-05-24T14:45:30Z'

RagSessionData:
  allOf:
    - $ref: '#/RagSessionBase'
    - type: object
      required:
        - queries
        - totalQueries
      properties:
        totalQueries:
          type: integer
          description: Total number of queries in session
          example: 15
        queries:
          type: array
          items:
            $ref: '#/RagQueryHistory'
          description: List of queries in the session
        pagination:
          $ref: '../schemas/common.yaml#/Pagination'

RagSessionListData:
  type: object
  required:
    - sessions
    - pagination
  properties:
    sessions:
      type: array
      items:
        $ref: '#/RagSessionSummary'
      description: List of session summaries
    pagination:
      $ref: '../schemas/common.yaml#/Pagination'
      description: Pagination information

RagIndexUpdateData:
  type: object
  required:
    - status
    - message
    - indexName
  properties:
    status:
      type: string
      enum: [accepted]
      description: Status of the update request
    message:
      type: string
      description: Human-readable message
    indexName:
      type: string
      description: Name of the index being updated
    estimatedDurationMinutes:
      type: integer
      description: Estimated time to complete the update
      example: 15

RagIndexUpdateResponse:
  allOf:
    - $ref: '../schemas/common.yaml#/APIResponse'
    - type: object
      properties:
        data:
          $ref: '#/RagIndexUpdateData'

RagIndexStatusData:
  type: object
  required:
    - indexName
    - status
  properties:
    indexName:
      type: string
      description: Name of the index
    status:
      type: string
      enum: [idle, running, error]
      description: Current index status
    lastExecution:
      $ref: '#/RagIndexExecutionStatus'

RagIndexStatusResponse:
  allOf:
    - $ref: '../schemas/common.yaml#/APIResponse'
    - type: object
      properties:
        data:
          $ref: '#/RagIndexStatusData'

RagIndexExecutionStatus:
  type: object
  required:
    - status
    - startTime
    - itemsProcessed
    - itemsFailed
    - errorCount
    - warningCount
    - isCompleted
    - isRunning
  properties:
    status:
      type: string
      enum: [inProgress, success, transientFailure, persistentFailure]
      description: Execution status
    startTime:
      type: string
      format: date-time
      description: When the execution started
    endTime:
      type: string
      format: date-time
      description: When the execution completed
    itemsProcessed:
      type: integer
      description: Number of items successfully processed
    itemsFailed:
      type: integer
      description: Number of items that failed processing
    duration:
      type: string
      description: Human-readable duration
      example: '15분'
    errorCount:
      type: integer
      description: Total number of errors
    warningCount:
      type: integer
      description: Total number of warnings
    isCompleted:
      type: boolean
      description: Whether the execution is completed
    isRunning:
      type: boolean
      description: Whether the execution is currently running
