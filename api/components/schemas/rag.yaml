RagQueryRequest:
  type: object
  required:
    - query
    - sessionId
  properties:
    query:
      type: string
      minLength: 2
      maxLength: 2000
      description: User query
      example: "What is list comprehension in Python?"
    sessionId:
      type: integer
      format: uint64
      description: Session identifier
    searchOptions:
      type: object
      description: Search/retrieval settings
      properties:
        indexName:
          type: string
          description: |
            Name of the Azure AI Search index to query.
            If not specified, backend will use the default index.
          example: "documents-index"
        semanticConfiguration:
          type: string
          default: "default"
          description: "Name of the semantic configuration to use for semantic ranking and captions"
        filter:
          type: string
          description: OData filter expression (e.g., "status eq 'active' and category eq 'document'")
          example: "status eq 'active'"
    generationOptions:
      type: object
      description: Response generation settings
      properties:
        gptModel:
          type: string
          enum: [gpt-4o-mini, gpt-4o]
          description: GPT model type. Must be either 'gpt-4o-mini' or 'gpt-4o'.
        temperature:
          type: number
          minimum: 0.0
          maximum: 2.0
          default: 0.5
          description: Response creativity/randomness
        maxTokens:
          type: integer
          minimum: 64
          maximum: 8192
          default: 2048
          description: Maximum response length
        systemPrompt:
          type: string
          default: "You are a helpful assistant. Answer based on the provided context."
          description: System prompt to guide response style and behavior
    noSearch:
      type: boolean
      description: Query without search

RagQueryResponse:
  allOf:
    - $ref: "../schemas/common.yaml#/APIResponse"
    - type: object
      properties:
        data:
          $ref: "#/RagQueryData"

RagQueryData:
  type: object
  required:
    - queryId
    - sessionId
    - response
  properties:
    queryId:
      type: string
      description: Unique query identifier
      example: "query_abc123"
    sessionId:
      type: integer
      format: uint64
      description: Session identifier
    response:
      type: string
      description: LLM generated response
      example: "List comprehension is a concise way to create lists in Python..."
    sources:
      type: array
      description: Referenced documents
      items:
        $ref: "#/RagQuerySource"
    similarQueries:
      type: array
      description: Similar previous queries
      items:
        $ref: "#/RagSimilarQuery"
    metadata:
      $ref: "#/RagResponseMetadata"

RagQuerySource:
  type: object
  required:
    - sourceId
    - relevanceScore
  properties:
    sourceId:
      type: string
      description: Document identifier
    title:
      type: string
      description: Document title
    relevanceScore:
      type: number
      minimum: 0.0
      maximum: 1.0
      description: Relevance score
    excerpt:
      type: string
      description: Relevant document excerpt
    url:
      type: string
      format: uri
      description: Original document URL

RagSimilarQuery:
  type: object
  required:
    - query
    - similarityScore
  properties:
    query:
      type: string
      description: Similar previous query
    similarityScore:
      type: number
      minimum: 0.0
      maximum: 1.0
      description: Similarity score
    queryId:
      type: string
      description: Previous query ID
    timestamp:
      type: string
      format: date-time
      description: Query timestamp

RagResponseMetadata:
  type: object
  description: Response processing metadata
  properties:
    searchTimeMs:
      type: integer
      description: Total processing time (milliseconds)
    queryTimeMs:
      type: integer
      description: Vector search time (milliseconds)
    inputTokens:
      type: integer
      description: Total number of input tokens
    outputTokens:
      type: integer
      description: Total number of output tokens
    sourcesCount:
      type: integer
      description: Number of referenced documents

RagSessionCreateRequest:
  type: object
  required:
    - name
  properties:
    name:
      type: string
      minLength: 1
      maxLength: 100
      description: Session name
      example: "Python Learning Session"
    category:
      type: string
    description:
      type: string
      maxLength: 500
      description: Session description
      example: "Session for learning Python programming concepts"
    tags:
      type: array
      items:
        type: string
      description: Session tags
      example: ["python", "programming", "learning"]

RagSessionCreateResponse:
  allOf:
    - $ref: "../schemas/common.yaml#/APIResponse"
    - type: object
      properties:
        data:
          $ref: "#/RagSession"

RagSessionListResponse:
  allOf:
    - $ref: "../schemas/common.yaml#/APIResponse"
    - type: object
      properties:
        data:
          $ref: "#/RagSessionListData"

RagSessionGetResponse:
  allOf:
    - $ref: "../schemas/common.yaml#/APIResponse"
    - type: object
      properties:
        data:
          $ref: "#/RagSessionData"

RagSessionBase:
  type: object
  required:
    - id
    - createdAt
  properties:
    id:
      type: integer
      format: uint64
      description: Session identifier
    name:
      type: string
      description: Session name
      example: "Python Learning Session"
    category:
      type: string
    description:
      type: string
      description: Session description
      example: "Session for learning Python programming concepts"
    createdAt:
      type: string
      format: date-time
      description: Session creation timestamp
      example: "2025-05-24T10:30:00Z"
    updatedAt:
      type: string
      format: date-time
      description: Last update timestamp
      example: "2025-05-24T14:45:30Z"
    tags:
      type: array
      items:
        type: string
      description: Session tags
      example: ["python", "programming", "learning"]

RagSession:
  allOf:
    - $ref: "#/RagSessionBase"

RagSessionSummary:
  allOf:
    - $ref: "#/RagSessionBase"
    - type: object
      required:
        - totalQueries
      properties:
        totalQueries:
          type: integer
          description: Total number of queries in session
          example: 15
        lastQueryAt:
          type: string
          format: date-time
          description: Timestamp of last query
          example: "2025-05-24T14:45:30Z"

RagSessionData:
  allOf:
    - $ref: "#/RagSessionBase"
    - type: object
      required:
        - history
      properties:
        history:
          type: array
          items:
            $ref: "#/RagSessionHistory"
          description: List of queries in the session
        pagination:
          $ref: "../schemas/common.yaml#/Pagination"

RagSessionHistory:
  type: object
  required:
    - query
    - queryResult
  properties:
    query:
      type: string
      description: User query text
    queryResult:
      $ref: "#/RagQueryData"

RagSessionListData:
  type: object
  required:
    - sessions
    - pagination
  properties:
    sessions:
      type: array
      items:
        $ref: "#/RagSessionSummary"
      description: List of session summaries
    pagination:
      $ref: "../schemas/common.yaml#/Pagination"
      description: Pagination information

RagIndexUpdateData:
  type: object
  required:
    - status
    - message
    - indexName
  properties:
    status:
      type: string
      enum: [accepted]
      description: Status of the update request
    message:
      type: string
      description: Human-readable message
    indexName:
      type: string
      description: Name of the index being updated
    estimatedDurationMinutes:
      type: integer
      description: Estimated time to complete the update
      example: 15

RagIndexUpdateResponse:
  allOf:
    - $ref: "../schemas/common.yaml#/APIResponse"
    - type: object
      properties:
        data:
          $ref: "#/RagIndexUpdateData"

RagIndexStatusData:
  type: object
  required:
    - indexName
    - status
  properties:
    indexName:
      type: string
      description: Name of the index
    status:
      type: string
      enum: [idle, running, error]
      description: Current index status
    lastExecution:
      $ref: "#/RagIndexExecutionResult"

RagIndexStatusResponse:
  allOf:
    - $ref: "../schemas/common.yaml#/APIResponse"
    - type: object
      properties:
        data:
          $ref: "#/RagIndexStatusData"

RagIndexExecutionResult:
  type: object
  required:
    - status
    - startTime
    - itemsProcessed
    - itemsFailed
    - errorCount
    - warningCount
  properties:
    status:
      type: string
      enum: [inProgress, success, transientFailure, persistentFailure]
      description: Execution status
    startTime:
      type: string
      format: date-time
      description: When the execution started
    endTime:
      type: string
      format: date-time
      description: When the execution completed
    itemsProcessed:
      type: integer
      description: Number of items successfully processed
    itemsFailed:
      type: integer
      description: Number of items that failed processing
    errorCount:
      type: integer
      description: Total number of errors
    warningCount:
      type: integer
      description: Total number of warnings

RagUploadDocumentRequest:
  x-form-model: true
  type: object
  required:
    - file
  properties:
    file:
      type: string
      format: binary
      description: File to upload
      x-go-type: "*multipart.FileHeader"
      x-oapi-codegen-extra-tags:
        form: "file"
        binding: "required"

RagUploadDocumentResponse:
  allOf:
    - $ref: "../schemas/common.yaml#/APIResponse"
    - type: object
      properties:
        data:
          $ref: "#/RagUploadDocumentData"

RagUploadDocumentData:
  type: object
  properties:
    sessionId:
      type: integer
      format: int64
      description: Session identifier used for this upload
      example: 1234567890123456789
    uploadedFiles:
      type: array
      items:
        $ref: "#/RagUploadedFileInfo"
      description: Information about each uploaded file
  required:
    - sessionId
    - uploadedFiles

RagUploadedFileInfo:
  type: object
  properties:
    fileName:
      type: string
      description: Original name of the uploaded file
      example: "investment-report-2024.pdf"
    fileSize:
      type: string
      description: Size of the uploaded file
      example: "2.5MB"
    status:
      type: string
      enum: ["queued", "processing", "completed", "failed"]
      description: Processing status of this specific file
      example: "queued"
    documentId:
      type: string
      description: Unique identifier assigned to this document
      example: "doc-456789"
    errorMessage:
      type: string
      description: Error message if file processing failed
      example: "Unsupported file format"
  required:
    - fileName
    - fileSize
    - status
    - documentId
